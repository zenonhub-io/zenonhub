{
    "Accelerator": [
        {
            "name": "Accelerator.getAll",
            "route": "accelerator.get-all",
            "method": "get",
            "inputs": {
                "page": "int:0",
                "perPage": "int:1000"
            }
        },
        {
            "name": "Accelerator.getProjectById",
            "route": "accelerator.get-project-by-id",
            "method": "get",
            "inputs": {
                "id": "string"
            }
        },
        {
            "name": "Accelerator.getPhaseById",
            "route": "accelerator.get-phase-by-id",
            "method": "get",
            "inputs": {
                "id": "string"
            }
        },
        {
            "name": "Accelerator.getPillarVotes",
            "route": "accelerator.get-pillar-votes",
            "method": "get",
            "inputs": {
                "pillarName": "string",
                "projectHashes": "array:[]"
            }
        },
        {
            "name": "Accelerator.getVoteBreakdown",
            "route": "accelerator.get-vote-breakdown",
            "method": "get",
            "inputs": {
                "hash": "string"
            }
        }
    ],
    "Bridge": [
        {
            "name": "Bridge.getBridgeInfo",
            "route": "bridge.get-bridge-info",
            "method": "get",
            "inputs": []
        },
        {
            "name": "Bridge.getSecurityInfo",
            "route": "bridge.get-security-info",
            "method": "get",
            "inputs": []
        },
        {
            "name": "Bridge.getOrchestratorInfo",
            "route": "bridge.get-orchestrator-info",
            "method": "get",
            "inputs": []
        },
        {
            "name": "Bridge.getTimeChallengesInfo",
            "route": "bridge.get-time-challenges-info",
            "method": "get",
            "inputs": []
        },
        {
            "name": "Bridge.getNetworkInfo",
            "route": "bridge.get-network-info",
            "method": "get",
            "inputs": {
                "networkClass": "int",
                "chainId": "int"
            }
        },
        {
            "name": "Bridge.getAllNetworks",
            "route": "bridge.get-all-networks",
            "method": "get",
            "inputs": {
                "pageIndex": "int:0",
                "pageSize": "int:1000"
            }
        },
        {
            "name": "Bridge.getRedeemableIn",
            "route": "bridge.get-redeemable-in",
            "method": "get",
            "inputs": {
                "unwrapTokenRequest": "string",
                "tokenPair": "string",
                "momentum": "string"
            }
        },
        {
            "name": "Bridge.getConfirmationsToFinality",
            "route": "bridge.get-confirmations-to-finality",
            "method": "get",
            "inputs": {
                "wrapTokenRequest": "string",
                "confirmationsToFinality": "int",
                "momentum": "string"
            }
        },
        {
            "name": "Bridge.getWrapTokenRequestById",
            "route": "bridge.get-wrap-token-request-by-id",
            "method": "get",
            "inputs": {
                "id": "string"
            }
        },
        {
            "name": "Bridge.getAllWrapTokenRequests",
            "route": "bridge.get-all-wrap-token-requests",
            "method": "get",
            "inputs": {
                "pageIndex": "int:0",
                "pageSize": "int:1000"
            }
        },
        {
            "name": "Bridge.getAllWrapTokenRequestsByToAddress",
            "route": "bridge.get-all-wrap-token-requests-by-to-address",
            "method": "get",
            "inputs": {
                "toAddress": "string",
                "pageIndex": "int:0",
                "pageSize": "int:1000"
            }
        },
        {
            "name": "Bridge.getAllWrapTokenRequestsByToAddressNetworkClassAndChainId",
            "route": "bridge.get-all-wrap-token-requests-by-to-address-network-class-and-chain-id",
            "method": "get",
            "inputs": {
                "toAddress": "string",
                "networkClass": "string",
                "pageIndex": "int",
                "pageSize": "int"
            }
        },
        {
            "name": "Bridge.getAllUnsignedWrapTokenRequests",
            "route": "bridge.get-all-unsigned-wrap-token-requests",
            "method": "get",
            "inputs": {
                "pageIndex": "int:0",
                "pageSize": "int:1000"
            }
        },
        {
            "name": "Bridge.getUnwrapTokenRequestByHashAndLog",
            "route": "bridge.get-unwrap-token-request-by-hash-and-log",
            "method": "get",
            "inputs": {
                "txHash": "string",
                "logIndex": "int"
            }
        },
        {
            "name": "Bridge.getAllUnwrapTokenRequests",
            "route": "bridge.get-all-unwrap-token-requests",
            "method": "get",
            "inputs": {
                "pageIndex": "int:0",
                "pageSize": "int:1000"
            }
        },
        {
            "name": "Bridge.getAllUnwrapTokenRequestsByToAddress",
            "route": "bridge.get-all-unwrap-token-requests-by-to-address",
            "method": "get",
            "inputs": {
                "toAddress": "string",
                "pageIndex": "int:0",
                "pageSize": "int:1000"
            }
        },
        {
            "name": "Bridge.getFeeTokenPair",
            "route": "bridge.get-fee-token-pair",
            "method": "get",
            "inputs": {
                "zts": "string"
            }
        }
    ],
    "Htlc": [
        {
            "name": "Htlc.getById",
            "route": "htlc.get-by-id",
            "method": "get",
            "inputs": {
                "id": "string"
            }
        },
        {
            "name": "Htlc.getProxyUnlockStatus",
            "route": "htlc.get-proxy-unlock-status",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        }
    ],
    "Ledger": [
        {
            "name": "Ledger.getFrontierAccountBlock",
            "route": "ledger.get-frontier-account-block",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        },
        {
            "name": "Ledger.getUnconfirmedBlocksByAddress",
            "route": "ledger.get-unconfirmed-blocks-by-address",
            "method": "get",
            "inputs": {
                "address": "string",
                "page": "int:0",
                "perPage": "int:100"
            }
        },
        {
            "name": "Ledger.getUnreceivedBlocksByAddress",
            "route": "ledger.get-unreceived-blocks-by-address",
            "method": "get",
            "inputs": {
                "address": "string",
                "page": "int:0",
                "perPage": "int:5"
            }
        },
        {
            "name": "Ledger.getAccountBlockByHash",
            "route": "ledger.get-account-block-by-hash",
            "method": "get",
            "inputs": {
                "hash": "string"
            }
        },
        {
            "name": "Ledger.getAccountBlocksByHeight",
            "route": "ledger.get-account-blocks-by-height",
            "method": "get",
            "inputs": {
                "address": "string",
                "height": "int:25",
                "count": "int:5"
            }
        },
        {
            "name": "Ledger.getAccountBlocksByPage",
            "route": "ledger.get-account-blocks-by-page",
            "method": "get",
            "inputs": {
                "address": "string",
                "page": "int:0",
                "perPage": "int:5"
            }
        },
        {
            "name": "Ledger.getFrontierMomentum",
            "route": "ledger.get-frontier-momentum",
            "method": "get",
            "inputs": []
        },
        {
            "name": "Ledger.getMomentumBeforeTime",
            "route": "ledger.get-momentum-before-time",
            "method": "get",
            "inputs": {
                "time": "int"
            }
        },
        {
            "name": "Ledger.getMomentumsByPage",
            "route": "ledger.get-momentums-by-page",
            "method": "get",
            "inputs": {
                "page": "int:0",
                "perPage": "int:5"
            }
        },
        {
            "name": "Ledger.getMomentumByHash",
            "route": "ledger.get-momentum-by-hash",
            "method": "get",
            "inputs": {
                "hash": "string"
            }
        },
        {
            "name": "Ledger.getMomentumsByHeight",
            "route": "ledger.get-momentums-by-height",
            "method": "get",
            "inputs": {
                "height": "int:1",
                "count": "int:100"
            }
        },
        {
            "name": "Ledger.getDetailedMomentumsByHeight",
            "route": "ledger.get-detailed-momentums-by-height",
            "method": "get",
            "inputs": {
                "height": "int:1",
                "count": "int:100"
            }
        },
        {
            "name": "Ledger.getAccountInfoByAddress",
            "route": "ledger.get-account-info-by-address",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        }
    ],
    "Liquidity": [
        {
            "name": "Liquidity.getLiquidityInfo",
            "route": "liquidity.get-liquidity-info",
            "method": "get",
            "inputs": []
        },
        {
            "name": "Liquidity.getSecurityInfo",
            "route": "liquidity.get-security-info",
            "method": "get",
            "inputs": []
        },
        {
            "name": "Liquidity.getLiquidityStakeEntriesByAddress",
            "route": "liquidity.get-liquidity-stake-entries-by-address",
            "method": "get",
            "inputs": {
                "address": "string",
                "pageIndex": "int:0",
                "pageSize": "int:1000"
            }
        },
        {
            "name": "Liquidity.getUncollectedReward",
            "route": "liquidity.get-uncollected-reward",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        },
        {
            "name": "Liquidity.getFrontierRewardByPage",
            "route": "liquidity.get-frontier-reward-by-page",
            "method": "get",
            "inputs": {
                "address": "string",
                "pageIndex": "int:0",
                "pageSize": "int:1000"
            }
        },
        {
            "name": "Liquidity.getTimeChallengesInfo",
            "route": "liquidity.get-time-challenges-info",
            "method": "get",
            "inputs": []
        }
    ],
    "Pillar": [
        {
            "name": "Pillar.getQsrRegistrationCost",
            "route": "pillar.get-qsr-registration-cost",
            "method": "get",
            "inputs": []
        },
        {
            "name": "Pillar.checkNameAvailability",
            "route": "pillar.check-name-availability",
            "method": "get",
            "inputs": {
                "name": "string"
            }
        },
        {
            "name": "Pillar.getAll",
            "route": "pillar.get-all",
            "method": "get",
            "inputs": {
                "page": "int:0",
                "perPage": "int:1000"
            }
        },
        {
            "name": "Pillar.getByOwner",
            "route": "pillar.get-by-owner",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        },
        {
            "name": "Pillar.getByName",
            "route": "pillar.get-by-name",
            "method": "get",
            "inputs": {
                "name": "string"
            }
        },
        {
            "name": "Pillar.getDelegatedPillar",
            "route": "pillar.get-delegated-pillar",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        },
        {
            "name": "Pillar.getDepositedQsr",
            "route": "pillar.get-deposited-qsr",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        },
        {
            "name": "Pillar.getUncollectedReward",
            "route": "pillar.get-uncollected-reward",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        },
        {
            "name": "Pillar.getFrontierRewardByPage",
            "route": "pillar.get-frontier-reward-by-page",
            "method": "get",
            "inputs": {
                "address": "string",
                "page": "int:0",
                "perPage": "int:100"
            }
        }
    ],
    "Plasma": [
        {
            "name": "Plasma.get",
            "route": "plasma.get",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        },
        {
            "name": "Plasma.getEntriesByAddress",
            "route": "plasma.get-entries-by-address",
            "method": "get",
            "inputs": {
                "address": "string",
                "page": "int:0",
                "perPage": "int:100"
            }
        },
        {
            "name": "Plasma.getRequiredPoWForAccountBlock",
            "route": "plasma.get-required-po-w-for-account-block",
            "method": "get",
            "inputs": {
                "address": "string",
                "blockType": "int",
                "toAddress": "string",
                "data": "string"
            }
        }
    ],
    "Sentinel": [
        {
            "name": "Sentinel.getByOwner",
            "route": "sentinel.get-by-owner",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        },
        {
            "name": "Sentinel.getAllActive",
            "route": "sentinel.get-all-active",
            "method": "get",
            "inputs": {
                "page": "int:0",
                "perPage": "int:1000"
            }
        },
        {
            "name": "Sentinel.getDepositedQsr",
            "route": "sentinel.get-deposited-qsr",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        },
        {
            "name": "Sentinel.getUncollectedReward",
            "route": "sentinel.get-uncollected-reward",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        },
        {
            "name": "Sentinel.getFrontierRewardByPage",
            "route": "sentinel.get-frontier-reward-by-page",
            "method": "get",
            "inputs": {
                "address": "string",
                "page": "int:0",
                "perPage": "int:100"
            }
        }
    ],
    "Stake": [
        {
            "name": "Stake.getEntriesByAddress",
            "route": "stake.get-entries-by-address",
            "method": "get",
            "inputs": {
                "address": "string",
                "page": "int:0",
                "perPage": "int:100"
            }
        },
        {
            "name": "Stake.getUncollectedReward",
            "route": "stake.get-uncollected-reward",
            "method": "get",
            "inputs": {
                "address": "string"
            }
        },
        {
            "name": "Stake.getFrontierRewardByPage",
            "route": "stake.get-frontier-reward-by-page",
            "method": "get",
            "inputs": {
                "address": "string",
                "page": "int:0",
                "perPage": "int:100"
            }
        }
    ],
    "Stats": [
        {
            "name": "Stats.syncInfo",
            "route": "stats.sync-info",
            "method": "get",
            "inputs": []
        },
        {
            "name": "Stats.networkInfo",
            "route": "stats.network-info",
            "method": "get",
            "inputs": []
        }
    ],
    "Swap": [
        {
            "name": "Swap.getAssetsByKeyIdHash",
            "route": "swap.get-assets-by-key-id-hash",
            "method": "get",
            "inputs": {
                "idKey": "string"
            }
        },
        {
            "name": "Swap.getAssets",
            "route": "swap.get-assets",
            "method": "get",
            "inputs": []
        },
        {
            "name": "Swap.getLegacyPillars",
            "route": "swap.get-legacy-pillars",
            "method": "get",
            "inputs": []
        }
    ],
    "Token": [
        {
            "name": "Token.getAll",
            "route": "token.get-all",
            "method": "get",
            "inputs": {
                "page": "int:0",
                "perPage": "int:100"
            }
        },
        {
            "name": "Token.getByOwner",
            "route": "token.get-by-owner",
            "method": "get",
            "inputs": {
                "address": "string",
                "page": "int:0",
                "perPage": "int:100"
            }
        },
        {
            "name": "Token.getByZts",
            "route": "token.get-by-zts",
            "method": "get",
            "inputs": {
                "token": "string"
            }
        }
    ],
    "Utilities": [
        {
            "name": "Utilities.addressFromPublicKey",
            "route": "utilities.address-from-public-key",
            "method": "get",
            "inputs": {
                "publicKey": "string"
            }
        },
        {
            "name": "Utilities.ztsFromHash",
            "route": "utilities.zts-from-hash",
            "method": "get",
            "inputs": {
                "hash": "string"
            }
        },
        {
            "name": "Utilities.verifySignedMessage",
            "route": "utilities.verify-signed-message",
            "method": "post",
            "inputs": {
                "publicKey": "string",
                "message": "string",
                "signature": "string",
                "address": "string"
            }
        }
    ]
}
